// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Category {
  id        String @id @default(uuid())
  name      String
  buddies     Buddy[]
}

model Buddy {
  id              String @id @default(uuid())
  userId          String
  userName        String
  src             String
  name            String @db.Text // for longer & searchable name
  description     String
  instruction     String @db.Text
  seed            String @db.Text

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  category        Category @relation(fields: [categoryId], references: [id])
  categoryId      String
  @@index([categoryId])
  @@fulltext([name])

  messages        Message[]
}

enum Role {
  user
  system
}

// Message can be sent from user side, or system side
model Message {
  id            String @id @default(uuid())
  role          Role
  content       String @db.Text
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  buddyId       String
  userId        String

  buddy         Buddy @relation(fields: [buddyId], references: [id], onDelete: Cascade)
  @@index([buddyId])
}

model UserSubscription {
  id                          String @id @default(uuid())
  userId                      String @unique  // clerk
  stripeCustomerId            String? @unique  @map(name: "stripe_customer_id")
  stripeSubscriptionId        String? @unique  @map(name: "stripe_subscription_id")
  stripePriceId               String? @unique  @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd      DateTime? @unique  @map(name: "stripe_current_period_end")
}